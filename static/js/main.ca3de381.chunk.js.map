{"version":3,"sources":["img/front.jpg","img/LOGO.svg","img/inside.jpg","Components/Navigation.js","Components/Home.js","Components/About.js","Components/Shop.js","Components/Footer.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Navigation","isCartOpen","addToCartQuantityVariable","handleOpenCartVariable","handleCloseCartVariable","toggleVariable","handleToggleVariable","handleCheckOutVariable","checkOutVariable","handleRemoveVariable","className","to","src","logo","alt","onClick","activeClassName","exact","data-count","id","front","Home","About","Shop","handleQuantityChangeVariable","handleAddToCartVariable","inside","type","min","placeholder","onChange","Footer","href","App","useState","quantityInput","setQuantityInput","localStorage","getItem","addToCartQuantity","setAddToCartQuantity","openCart","setOpenCart","checkOut","setCheckOut","toggle","setToggle","useEffect","setItem","path","event","target","value","parseInt","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.ca3de381.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/front.2979cd57.jpg\";","module.exports = __webpack_public_path__ + \"static/media/LOGO.19196396.svg\";","module.exports = __webpack_public_path__ + \"static/media/inside.281e4dbd.jpg\";","import React from 'react';\r\nimport logo from '../img/LOGO.svg'\r\nimport front from '../img/front.jpg'\r\nimport {NavLink} from \"react-router-dom\"\r\n\r\nconst Navigation = ({isCartOpen, addToCartQuantityVariable, handleOpenCartVariable, handleCloseCartVariable, toggleVariable, handleToggleVariable, handleCheckOutVariable, checkOutVariable, handleRemoveVariable}) => {\r\n\r\n    return(\r\n        <>\r\n            <header className=\"Header\">\r\n                <div className=\"navbar\">\r\n                    <div className=\"logo\">\r\n                        <NavLink to={`/`}><img src={logo} alt=\"logo\" /> </NavLink>\r\n                    </div>\r\n\r\n                    <div className={`menu ${toggleVariable ? 'open' : ''}`}>\r\n                        <NavLink onClick = {handleToggleVariable} activeClassName=\"active-nav\" className= 'menu-items' exact to={`/`}>home</NavLink>\r\n                        <NavLink onClick = {handleToggleVariable} activeClassName=\"active-nav\" className= 'menu-items' exact to={`/about`}>about</NavLink>\r\n                        <NavLink onClick = {handleToggleVariable} activeClassName=\"active-nav\" className= 'menu-items' exact to={`/shop`}>shop</NavLink>\r\n                    </div>\r\n\r\n                    <div className=\"cart-btn\">\r\n                        <div className=\"cart-button\" data-count={`${addToCartQuantityVariable}`} onClick={handleOpenCartVariable}> <i className=\"fas fa-shopping-cart\"></i> </div>\r\n                    </div>\r\n\r\n                    <div className=\"menu-button\">\r\n                        <span className={`burger ${toggleVariable ? 'open' : ''}`} onClick={handleToggleVariable}></span>\r\n                    </div>\r\n                </div>\r\n            </header>\r\n\r\n            <div className={`cart ${isCartOpen ? 'open' : ''}`}>\r\n                <div className=\"cart-container\">\r\n                    <div className=\"cart-header\">\r\n                        <h3 className=\"your-cart\">Your Cart</h3>\r\n                        <div className=\"close\" onClick={handleCloseCartVariable}>&times;</div>\r\n                    </div>\r\n                    <div className=\"cart-items\"> {addToCartQuantityVariable ? \r\n                    <div className=\"cart-item\">\r\n                        <div id=\"remove\" className=\"close\" onClick={handleRemoveVariable}>&times;</div>\r\n                        <img className=\"front\" src={front} alt=\"front\"/>\r\n                        <div className=\"product-des\">\r\n                            <h3 className=\"product-name\">THE GOOD MORNING</h3>\r\n                            <p>$ <span className=\"price\"> 15.00 </span> USD</p>\r\n                        </div>\r\n                        <div className=\"quantity\">{ addToCartQuantityVariable }</div>\r\n                    </div> \r\n                    : \r\n                    <p>No items found.</p>}  </div>\r\n                    <div className=\"cart-footer\">\r\n                        <h3>Subtotal</h3>\r\n                    <p>$ <span className=\"subtotal\"> {addToCartQuantityVariable * 15} </span>.00</p>\r\n                    </div>\r\n                    <div id=\"checkout\" className=\"checkout\" onClick={handleCheckOutVariable}> {checkOutVariable} </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\n\r\nexport default Navigation","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst Home = () => {\r\n    return (\r\n        <div className=\"main\">\r\n            <div className=\"hero-a\">\r\n                <Link className=\"buy\" to={`/shop`} >Buy Now</Link>\r\n                <small className=\"scroll\">SCROLL</small>\r\n            </div>\r\n            <div className=\"hero-text\">\r\n                <p className=\"text\">Freshly ground heaven.</p>\r\n                <small className=\"text-small\"> Organic beans are hand-selected by our team and roasted to perfection. </small>\r\n            </div>\r\n            <div className=\"hero-b\"></div>\r\n            <div className=\"hero-text\">\r\n                <p className=\"text\">Nectar of Gods.</p>\r\n                <small className=\"text-small\"> Our goal is to create the best tasting cup of coffee you’ve ever experienced. Our beans are hand picked all across the world and roasted to perfection. Our unique methods produce a flavor you’ll never forget.  </small>\r\n            </div>\r\n            <div className=\"hero-c\"></div>\r\n            <div className=\"hero-text-bottom\">\r\n                <p className=\"text\">Cure for depresso.</p>\r\n                <small className=\"text-small\"> Our team works round the clock to ensure your beans are roasted just two days before they’re packaged and delivered to your door. </small>\r\n                <Link className=\"buy\" to={`/shop`} >Buy Now</Link>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Home","import React from 'react';\r\n\r\nconst About = () => {\r\n    return (\r\n        <div className=\"about-main\">\r\n            <div className=\"a-hero-about\">\r\n                <div className=\"text-about\">\r\n                    <h3>About Us</h3>\r\n                    <p>Cockcrow Coffee Company provides premium, freshly roasted coffee. It was started on January 6, 1920 - a company that stemmed from our absolute love of coffee. The goal is to create a lineup of only the best coffee blends for everyone to enjoy.</p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default About","import React from 'react';\r\nimport front from '../img/front.jpg'\r\nimport inside from '../img/inside.jpg'\r\n\r\nconst Shop = ({handleQuantityChangeVariable, handleAddToCartVariable}) => {\r\n\r\n    return(\r\n        <div className=\"main\">\r\n            <div className=\"shop-main\">\r\n                <div className=\"product\">\r\n                    <img className=\"front\" src={front} alt=\"front\"/>\r\n                    <img className=\"inside\" src={inside} alt=\"inside\"/>\r\n                </div>\r\n\r\n                <div className=\"product-details\">\r\n                    <h3 className=\"product-name\">THE GOOD MORNING</h3>\r\n                    <p className=\"price\">$15.00 USD</p>\r\n                    <p className=\"product-description\">A richly balanced medium roast with the smooth taste of red fruits, baker's chocolate, and cola. It's roasted from a certified organic blend of seasonal 50% Guatemalan & 50% Peruvian coffee beans.</p>\r\n                    <p className=\"product-description\">Roasted in Virginia Beach, VA every Tuesday and shipped out within 24 hours.</p>\r\n                    <p className=\"product-description\">12 ounces of organic whole beans.</p>\r\n\r\n                    <div className=\"add-to-cart\">\r\n                        <input className=\"qnty\" type=\"number\"  min=\"1\" placeholder=\"1\" onChange={handleQuantityChangeVariable}/>\r\n                        <div id=\"add-to-cart\" className=\"button\" onClick={handleAddToCartVariable}>ADD TO CART</div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Shop\r\n\r\n","import React from 'react';\r\n\r\nconst Footer = () => {\r\n    return (\r\n        <footer className=\"Footer-about\">\r\n            <p> Contact Us: <span> <a href=\"mailto:support@cockcrowcoffeecompany.com\"> support@cockcrowcoffeecompany.com</a> </span> </p>\r\n            <small>All rights reserved Cockcrow Coffee Co.</small>\r\n        </footer>\r\n    )\r\n}\r\n\r\nexport default Footer","import React, {useState, useEffect} from 'react';\nimport './css/style.css';\nimport Navigation from './Components/Navigation'\nimport {\n  HashRouter as Router,\n  Switch,\n  Route,\n} from \"react-router-dom\"\n\nimport Home from './Components/Home'\nimport About from './Components/About'\nimport Shop from './Components/Shop'\nimport Footer from './Components/Footer'\n\nconst App = () => {\n\n  const [quantityInput, setQuantityInput] = useState(1)\n  const [addToCartQuantity, setAddToCartQuantity] = useState(localStorage.getItem('items')||0)\n  const [openCart, setOpenCart] = useState(false)\n  const [checkOut, setCheckOut] = useState('CHECKOUT')\n  const [toggle, setToggle] = useState(false)\n  \n  useEffect(() => {\n      localStorage.setItem('items', addToCartQuantity)\n  },[addToCartQuantity])\n\n  const handleAddToCart = () => {\n      setAddToCartQuantity(parseInt(addToCartQuantity) + parseInt(quantityInput))\n      setOpenCart(true)\n      \n  }\n  const handleQuantityChange = event => {\n      setQuantityInput(event.target.value)\n  }\n\n  const handleOpenCart = () => {\n     setOpenCart(true)\n  }\n\n  const handleCloseCart = () => {\n     setOpenCart(false)\n  }\n\n  const handleToggle = () => {\n    setToggle(!toggle)\n  }\n\n  const handleCheckOut = () => {\n    setCheckOut('Out of Stock')\n  }\n\n  const handleRemove = () => {\n    setAddToCartQuantity(0)\n  }\n\n\n  return (\n    <div className=\"App\">\n      <Router>\n        <Navigation isCartOpen={openCart} addToCartQuantityVariable = {addToCartQuantity} handleOpenCartVariable = {handleOpenCart} handleCloseCartVariable={handleCloseCart} toggleVariable = {toggle} handleToggleVariable = {handleToggle} handleCheckOutVariable = {handleCheckOut} checkOutVariable = {checkOut} handleRemoveVariable = {handleRemove} />\n        <Switch>\n                <Route exact path={`/about`}>\n                    <About />\n                </Route>\n                <Route exact path={`/shop`}>\n                    <Shop handleQuantityChangeVariable = {handleQuantityChange} handleAddToCartVariable = {handleAddToCart} />\n                </Route>\n                <Route exact path={`/`}>\n                    <Home />\n                </Route>\n        </Switch>\n        <Footer />\n      </Router>\n    </div>\n  )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}